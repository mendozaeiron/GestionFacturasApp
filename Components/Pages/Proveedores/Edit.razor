@page "/proveedores/edit/{id:int}"
@using GestionFacturasApp.Data
@using GestionFacturasApp.Models
@inject ApplicationDbContext dbContext
@inject NavigationManager navigationManager

<h3>Editar Proveedor</h3>

@if (proveedor != null)
{
    <EditForm Model="@proveedor" OnValidSubmit="EditarProveedor" FormName="ProveedorEditForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="nombre" class="form-label">Nombre Proveedor</label>
            <InputText id="nombre" class="form-control" @bind-Value="proveedor.NombreProveedor" />
        </div>

        <div class="mb-3">
            <label for="comuna" class="form-label">Comuna</label>
            <InputText id="comuna" class="form-control" @bind-Value="proveedor.ComunaProveedor" />
        </div>

        <div class="mb-3">
            <label for="ciudad" class="form-label">Ciudad</label>
            <InputText id="ciudad" class="form-control" @bind-Value="proveedor.CiudadProveedor" />
        </div>

        <div class="mb-3">
            <label for="fono" class="form-label">Teléfono</label>
            <InputText id="fono" class="form-control" @bind-Value="proveedor.FonoProveedor" />
        </div>

        <div class="mb-3">
            <label for="rut" class="form-label">RUT</label>
            <InputText id="rut" class="form-control" @bind-Value="proveedor.RutProveedor" />
        </div>

        <div class="mb-3">
            <label for="giro" class="form-label">Giro</label>
            <InputText id="giro" class="form-control" @bind-Value="proveedor.GiroProveedor" />
        </div>

        <button type="submit" class="btn btn-primary">Guardar</button>
    </EditForm>
}
else
{
    <p>Cargando datos del proveedor...</p>
}

@code {
    [Parameter] public int id { get; set; }
    private Proveedor proveedor;

    protected override async Task OnInitializedAsync()
    {
        proveedor = await dbContext.Proveedores.FindAsync(id) ?? new Proveedor(); // Inicializa un proveedor vacío si no se encuentra
    }

    private async Task EditarProveedor()
    {
        dbContext.Proveedores.Update(proveedor);
        await dbContext.SaveChangesAsync();
        navigationManager.NavigateTo("/proveedores/index");
    }
}





